import 'package:DemoApp/Screens/LoginScreen.dart';
import 'package:DemoApp/Screens/VideoScreen.dart';
import 'package:DemoApp/Screens/camreaScreen.dart';
import 'package:camera/camera.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:video_player/video_player.dart';

class HomeScreen extends StatefulWidget {
  static const String routeName = "Home";
  @override
  _HomeScreenState createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  final _searchController = TextEditingController();
  final _globalKey = GlobalKey<ScaffoldState>();
  VideoPlayerController _videoPlayerController;
  var videoList;
  var searchList = [];
  @override
  void didChangeDependencies() {
    var data = ModalRoute.of(context).settings.arguments as String;
    print("Homescreendarata-------------- $data");
    super.didChangeDependencies();
  }

  @override
  void initState() {
    _searchController.addListener(() {
      setState(() {});
    });
    super.initState();
  }

  @override
  void dispose() {
    _searchController.dispose();
    _videoPlayerController.dispose();
    super.dispose();
  }

  Future<void> onSearchhText(String value) async {
    print("Search text Length-------------------${_searchController.text}");
    if (!_searchController.text.isEmpty) {
      var str = _searchController.text;
      var datalist = [];
      print("Videolist length--------${videoList[0]['topic']}");
      videoList.map((item) {
        print("in map function-----------------------");
        if (item['title'].toLowerCase().contains(str.toLowerCase()) ||
            item['topic'].toLowerCase().contains(str.toLowerCase())) {
          searchList.add(item);
          print("item-------------------" + item['topic']);
        }
        print("datalist Length--------------${searchList.length}");
      }).toList();
    }
  }

  void onClickVideo(int index, String data) {
    if (_videoPlayerController.value.isPlaying) {
      // _videoPlayerController = VideoPlayerController.network(data);
      _videoPlayerController.initialize();
      _videoPlayerController.pause();
      print("in play-----------");
    } else {
      // _videoPlayerController =
      //     VideoPlayerController.network(
      //   streamSnapShot.data.documents[index]
      //       ['videoPath'],
      // );
      _videoPlayerController.initialize();
      // _videoPlayerController.pause();
      _videoPlayerController.play();
      print("in paush---------");
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      key: _globalKey,
      // appBar: AppBar(
      //   backgroundColor: new Color(0xffeff2ff),
      // ),
      body: Container(
        height: MediaQuery.of(context).size.height,
        color: new Color(0xffeff2ff),
        padding: EdgeInsets.only(left: 40),
        child: SingleChildScrollView(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              SizedBox(
                height: 80,
              ),
              Container(
                child: Text(
                  "Hello, Alex!",
                  style: TextStyle(
                    fontSize: 22,
                    fontWeight: FontWeight.w500,
                  ),
                ),
              ),
              SizedBox(
                height: 20,
              ),
              Container(
                margin: EdgeInsets.only(right: 30),
                child: Text(
                  "What would you like to learn today?",
                  style: TextStyle(
                    fontSize: 30,
                    fontWeight: FontWeight.w600,
                    color: new Color(0xffADADAD),
                  ),
                ),
              ),
              SizedBox(
                height: 40,
              ),
              Container(
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.only(
                    topLeft: Radius.circular(10.0),
                    bottomLeft: Radius.circular(10.0),
                  ),
                  color: Colors.white,
                ),
                height: 60,
                child: Row(
                  children: [
                    Container(
                      width: 60,
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.only(
                          topLeft: Radius.circular(10.0),
                          bottomLeft: Radius.circular(10.0),
                        ),
                        color: Theme.of(context).primaryColor,
                      ),
                      height: double.infinity,
                      padding: EdgeInsets.all(17),
                      child: Image.asset(
                        "assets/images/search.png",
                        height: 20,
                        width: 20,
                        color: Colors.white,
                      ),
                    ),
                    Expanded(
                      child: Container(
                        padding: EdgeInsets.only(left: 10),
                        child: TextField(
                          controller: _searchController,
                          decoration: InputDecoration(
                            border: InputBorder.none,
                            hintText: 'Content Creation',
                          ),
                          style: TextStyle(
                            fontWeight: FontWeight.w500,
                            decoration: TextDecoration.none,
                            fontFamily: 'Hind',
                          ),
                          onChanged: onSearchhText,
                        ),
                      ),
                    ),
                  ],
                ),
              ),
              SizedBox(
                height: 40,
              ),

              Container(
                height: 350,
                child: StreamBuilder(
                  stream: Firestore.instance
                      .collection('video/KNkZltLvbGjRJ9Y0vNcl/videoDetail')
                      .orderBy('timeStamp', descending: true)
                      .snapshots(),
                  builder: (contex, AsyncSnapshot streamSnapShot) {
                    if (streamSnapShot.connectionState ==
                        ConnectionState.waiting) {
                      return Center(child: CircularProgressIndicator());
                    }
                    return ListView.builder(
                        scrollDirection: Axis.horizontal,
                        itemCount: streamSnapShot.data.documents.length,
                        itemBuilder: (ctx, index) {
                          print("data----------" +
                              streamSnapShot.data.documents[index]
                                  ['videoPath']);
                          _videoPlayerController =
                              VideoPlayerController.network(
                            streamSnapShot.data.documents[index]['videoPath'],
                          );
                          _videoPlayerController.initialize();
                          videoList = streamSnapShot.data.documents;
                          // _videoPlayerController.setLooping(true);
                          return Container(
                            width: MediaQuery.of(context).size.width * 0.6,
                            // height: 300,
                            // padding: EdgeInsets.all(10),
                            margin:
                                EdgeInsets.only(top: 5, bottom: 10, right: 15),
                            decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(20),
                              color: Colors.white,
                            ),
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                GestureDetector(
                                  onTap: () => onClickVideo(
                                    index,
                                    streamSnapShot.data.documents[index]
                                        ['videoPath'],
                                  ),
                                  child: Container(
                                    // decoration: BoxDecoration(
                                    //   borderRadius: BorderRadius.circular(15),
                                    //   color: Colors.white,
                                    // ),
                                    // width: MediaQuery.of(context).size.width,
                                    child: AspectRatio(
                                      aspectRatio: 1.2,
                                      child: ClipRRect(
                                        borderRadius: BorderRadius.only(
                                          topLeft: Radius.circular(20.0),
                                          topRight: Radius.circular(20.0),
                                        ),
                                        child:
                                            VideoPlayer(_videoPlayerController),
                                      ),
                                    ),
                                  ),
                                ),
                                SizedBox(
                                  height: 20,
                                ),
                                Container(
                                  margin: EdgeInsets.only(left: 20, right: 10),
                                  child: Text(
                                    streamSnapShot.data.documents[index]
                                        ['topic'],
                                    maxLines: 1,
                                    style: TextStyle(
                                      color: Theme.of(context).primaryColor,
                                      fontSize: 14,
                                      fontWeight: FontWeight.w800,
                                    ),
                                  ),
                                ),
                                SizedBox(
                                  height: 10,
                                ),
                                Container(
                                  margin: EdgeInsets.only(left: 20, right: 10),
                                  child: Text(
                                    streamSnapShot.data.documents[index]
                                        ['title'],
                                    maxLines: 3,
                                    style: TextStyle(
                                      color: Colors.black,
                                      fontSize: 18,
                                      fontWeight: FontWeight.w600,
                                    ),
                                  ),
                                ),
                                SizedBox(
                                  height: 15,
                                ),
                              ],
                            ),
                          );
                        });
                  },
                ),
                // }
              ),
              // ),
            ],
          ),
        ),
      ),

      // floatingActionButton: Container(
      //   margin: EdgeInsets.only(
      //     // bottom: 15,t
      //     top: 40,
      //     right: 20,
      //   ),
      //   decoration: BoxDecoration(
      //     color: Theme.of(context).primaryColor,
      //     borderRadius: BorderRadius.circular(10),
      //   ),
      //   child: IconButton(
      //     // icon: Icon(Icons.add),
      //     icon: Image.asset(
      //       "assets/images/video.png",
      //       height: 25,
      //       width: 25,
      //     ),
      //     onPressed: () {
      //       Navigator.of(context).pushNamed(CameraScreen.routeName);
      //     },
      //     color: Colors.blue,
      //   ),
      // ),
    );
  }
}

class NetworkPlayerLifeCycle {}
